# stages:
#   - testing
#
# # Official language image. Look for the different tagged releases at:
# # https://hub.docker.com/r/library/python/tags/
# # image: python:latest
#
# # shorthand for testing
# .test_template: &template
#   image: alejandroastudillo/tasho_docker
#   tags:
#     - docker
#   before_script:
#     - source activate ocpx
#     - mkdir -p .pip
#     - pip --cache-dir=.pip install casadi sphinx-gallery sphinx_rtd_theme coverage
#     - python setup.py install
#   cache:
#     paths:
#       - .pip
#
#
# # Change pip's cache directory to be inside the project directory since we can
# # only cache local items.
# variables:
#   PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
#
# # Pip's cache doesn't store the python packages
# # https://pip.pypa.io/en/stable/reference/pip_install/#caching
# #
# # If you want to also cache the installed packages, you have to install
# # them in a virtualenv and cache it as well.
# cache:
#   paths:
#     - .cache/pip
#     - venv/
#
# before_script:
#   - python -V  # Print out python version for debugging
#   - pip install virtualenv
#   - virtualenv venv
#   - source venv/bin/activate
#
# test:
#   script:
#     - python setup.py test
#     - pip install tox flake8  # you can also use tox
#     - tox -e py36,flake8
#
# run:
#   script:
#     - python setup.py bdist_wheel
#     # an alternative approach is to install and run:
#     - pip install dist/*
#     # run the command here
#   artifacts:
#     paths:
#       - dist/*.whl
#
# pages:
#   script:
#     - pip install sphinx sphinx-rtd-theme
#     - cd doc ; make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   only:
#     - master

stages:
  - testing

# shorthand for testing
.test_template: &template
  image: asteinh/ocpx-base
  tags:
    - docker
  before_script:
    - source activate ocpx
    - mkdir -p .pip
    - pip --cache-dir=.pip install casadi rockit-meco coverage nose
    - python setup.py install
  cache:
    paths:
      - .pip

testing:unittests:
  stage: testing
  <<: *template
  script:
    - nosetests --with-coverage --cover-html --cover-package=tasho
  artifacts:
    paths:
      - cover

testing:examples:
  stage: testing
  <<: *template
  script:
    - find  examples -name "*.py" -not -path "*/wip/*" | xargs -n 1 python
